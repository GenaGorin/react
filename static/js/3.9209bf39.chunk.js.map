{"version":3,"sources":["components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/ProfileInfo/ProfileStatus.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","props","className","s","item","src","url_image","alt","id","message","likesCount","MyPosts","React","memo","componentsPost","posts","reverse","map","post","key","photo_url","likes","mypostMainWrapp","WallPostFormRedux","onSubmit","formData","console","log","addPost","wallPostText","postWrapper","maxLength5","maxLengthCreator","reduxForm","form","handleSubmit","Field","type","placeholder","name","component","Textarea","validate","required","MyPostsContainer","connect","state","profile","defaultValue","newPostText","dispatch","text","addPostActionCreator","Component","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","value","currentTarget","autoFocus","onBlur","updateProfileStatus","onDoubleClick","ProfileInfo","descriptionBlock","photos","large","fullName","aboutMe","lookingForAJob","lookingForAJobDescription","Preloader","componentOpenWithSound","ProfileContainer","userId","this","match","params","myID","history","push","getUserStatus","getProfileThunk","compose","auth","isAuth","setUserProfile","withRouter"],"mappings":"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","file":"static/js/3.9209bf39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mypostMainWrapp\":\"MyPosts_mypostMainWrapp__3ZfM1\",\"postWrapper\":\"MyPosts_postWrapper__fPfyf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1VT3_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__3FfCH\"};","import React from 'react';\r\nimport s from'./Post.module.css';\r\n\r\nconst Post = (props) => {\r\n    return ( \r\n        <div className ={s.item}>\r\n            <img src={props.url_image} alt={props.id}/>\r\n            {props.message}\r\n            <div>\r\n                <span>Like - {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import React, { Component, PureComponent } from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from '../../../redux/profileReducer';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { required, maxLengthCreator, test } from '../../../utils/validators/validators';\r\nimport { Textarea } from '../../common/FromsControls/FormControls';\r\nimport sound from '../../../assets/sounds/69880c1f5e57698.mp3';\r\n\r\n\r\nconst MyPosts = React.memo( props => {\r\n  let componentsPost = [...props.posts].reverse().map(post => <Post message={post.post} id={post.id} key={post.id} url_image={post.photo_url} likesCount={post.likes} />);\r\n\r\n  let createNewWallPost = (formData) => {\r\n    console.log(formData);\r\n    //props.updateNewPostText(formData.wallPostText);\r\n    props.addPost(formData.wallPostText);\r\n  }\r\n  \r\n\r\n  return (\r\n    <div className={s.mypostMainWrapp}>\r\n      <h3>My posts</h3>\r\n      <div>\r\n        <WallPostFormRedux onSubmit={createNewWallPost} />\r\n      </div>\r\n      <div className={s.postWrapper}>\r\n        {componentsPost}\r\n      </div>\r\n    </div>\r\n  );\r\n});\r\n\r\n\r\n/*\r\nclass MyPosts extends PureComponent {\r\n  render() {\r\n\r\n    console.log('RENDER');\r\n    let componentsPost = this.props.posts.map(post => <Post message={post.post} id={post.id} key={post.id} url_image={post.photo_url} likesCount={post.likes} />);\r\n\r\n    let createNewWallPost = (formData) => {\r\n      console.log(formData);\r\n      //props.updateNewPostText(formData.wallPostText);\r\n      this.props.addPost(formData.wallPostText);\r\n    }\r\n    return (\r\n      <div className={s.mypostMainWrapp}>\r\n        <h3>My posts</h3>\r\n        <div>\r\n          <WallPostFormRedux onSubmit={createNewWallPost} />\r\n        </div>\r\n        <div className={s.postWrapper}>\r\n          {componentsPost}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}*/\r\n\r\n\r\nconst maxLength5 = maxLengthCreator(5);\r\n\r\n\r\nconst WallPostForm = (props) => {\r\n  return (\r\n    <form onSubmit={props.handleSubmit}>\r\n      <div>\r\n        <Field type=\"text\" placeholder='АУе челяба' name='wallPostText' component={Textarea} validate={[required, maxLength5]} />\r\n      </div>\r\n      <div>\r\n        <button>Add</button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nconst WallPostFormRedux = reduxForm({ form: 'addWallPost' })(WallPostForm);\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport MyPosts from './MyPosts';\r\nimport { addPostActionCreator } from '../../../redux/profileReducer';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    posts: state.profile.posts,\r\n    defaultValue: state.profile.newPostText,\r\n  }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      addPost: (text) => {\r\n          dispatch(addPostActionCreator(text));\r\n      },\r\n  }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\n\r\nclass ProfileStatus extends React.Component {\r\n    state = {\r\n        editMode: false,\r\n        status: this.props.status,\r\n    }\r\n    startOrStopEditMode (bool){\r\n        this.setState({\r\n            editMode: bool,\r\n        });\r\n        if(!bool) {\r\n            this.props.updateProfileStatus(this.state.status);\r\n        }\r\n    }\r\n\r\n    onStatusChange =(e)=> {\r\n        let value = e.currentTarget.value;\r\n        this.setState({\r\n            status: value,\r\n        });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevProps.status !== this.props.status) {\r\n            this.setState({\r\n                status: this.props.status,\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        console.log('render');\r\n        return (\r\n            <div>\r\n                {this.state.editMode ?\r\n                    <div>\r\n                        <input onChange = {this.onStatusChange} autoFocus = {true} onBlur = {() => {this.startOrStopEditMode(false)}} type=\"text\" value={this.state.status} />\r\n                    </div>\r\n                    :\r\n                    <div onDoubleClick = {()=>{this.startOrStopEditMode(true)}}>\r\n                        <span>{this.state.status.length === 0? '---': this.state.status}</span>\r\n                    </div>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfileStatus;","import React, { useState, useEffect } from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateProfileStatus(status);\r\n    }\r\n    let [status, setStatus] = useState(props.status);\r\n    const onStatusChange = (e) => {\r\n        let value = e.currentTarget.value;\r\n        setStatus(value);\r\n    }\r\n    useEffect(()=>{\r\n        setStatus(props.status);\r\n    },[props.status]);\r\n    return (\r\n        <div>\r\n            {editMode ?\r\n                <div>\r\n                    <input onChange = {onStatusChange} autoFocus={true} type=\"text\" value={status} onBlur={deactivateEditMode} />\r\n                </div>\r\n                :\r\n                <div >\r\n                    <span onDoubleClick={activateEditMode}>{!props.status ? '---' : props.status}</span>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from '../../common/Preloader/Preloader';\r\nimport ProfileStatus from './ProfileStatus';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = (props) => {\r\n  if (!props.profile) {\r\n    return <Preloader />\r\n  }\r\n  return (\r\n    <div>\r\n      <div>\r\n        <img src='https://images.pexels.com/photos/248797/pexels-photo-248797.jpeg?auto=compress&cs=tinysrgb&h=350' />\r\n      </div>\r\n      <div className={s.descriptionBlock}>\r\n        <img src={props.profile.photos.large} alt=\"test\"/>\r\n        < ProfileStatusWithHooks status = {props.status} updateProfileStatus = {props.updateProfileStatus}/>\r\n        <p>{props.profile.fullName}</p>\r\n        <p>{props.profile.aboutMe}</p>\r\n        <p>{props.profile.lookingForAJob ? 'Ищу работу': 'Не ищу работу я кайфарик'}</p>\r\n        <p>{props.profile.lookingForAJobDescription}</p>\r\n    </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Profile.module.css';\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileInfo from './ProfileInfo/ProfileInfo';\r\nimport {componentOpenWithSound} from '../../hoc/withAuthRtedirect';\r\n\r\n\r\nconst Profile = (props) => {\r\n  return (\r\n    <div>\r\n      <ProfileInfo profile = {props.profile} status = {props.status} updateProfileStatus = {props.updateProfileStatus}/>\r\n      <MyPostsContainer />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default componentOpenWithSound(Profile);","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from \"react-redux\";\r\nimport { setUserProfile, getProfileThunk, getUserStatus, updateProfileStatus } from '../../redux/profileReducer';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRtedirect';\r\nimport {compose} from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n  componentDidMount() {\r\n    let userId = this.props.match.params.userId;\r\n    if (!userId) {\r\n        userId = this.props.myID;\r\n        if (!userId) {\r\n          this.props.history.push('/login');\r\n        }\r\n    }\r\n    //alert(this.props.myID);\r\n    this.props.getUserStatus(userId);\r\n    this.props.getProfileThunk(userId);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Profile {... this.props} profile={this.props.profile} updateProfileStatus = {this.props.updateProfileStatus} />\r\n    )\r\n  }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n  profile: state.profile.profile,\r\n  myID: state.auth.id,\r\n  status: state.profile.status,\r\n  isAuth: state.auth.isAuth,\r\n});\r\n\r\nexport default compose(\r\n  connect(mapStateToProps, { setUserProfile, getProfileThunk, getUserStatus, updateProfileStatus }),\r\n  withRouter,\r\n  //withAuthRedirect\r\n)(ProfileContainer);"],"sourceRoot":""}