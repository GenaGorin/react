{"version":3,"sources":["components/Navbar/Navbar.module.css","assets/sounds/69880c1f5e57698.mp3","components/Map/Map.module.css","assets/img/2zH6.gif","api/api.js","components/Dialogs/Dialogs.module.css","serviceWorker.js","redux/dialogsReducer.js","redux/friendsReducer.js","redux/usersReducer.js","redux/AuthReducer.js","redux/appReducer.js","redux/redux-store.js","components/Header/Header.jsx","components/Header/HeaderContainer.jsx","components/Navbar/Friend/Friend.jsx","components/Navbar/Navbar.jsx","components/Navbar/NavbarContainer.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx","components/Music/Music.jsx","components/Map/Map.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/usersSelector.js","components/common/Paginator/Paginator.jsx","components/Users/UsersContainer.jsx","components/Settings/Settings.jsx","components/Login/Login.jsx","hoc/withSuspense.js","App.js","index.js","utils/validators/validators.js","components/common/Preloader/Preloader.jsx","components/common/FromsControls/FormControls.jsx","components/common/FromsControls/FormControls.module.css","hoc/withAuthRtedirect.js","components/Navbar/Friend/Friend.module.css","assets/img/gorin.jpg","components/Users/Users.module.css","components/Header/Header.module.css","components/common/Paginator/Paginator.module.css","redux/profileReducer.js"],"names":["module","exports","samuraiApi","axios","withCredentials","headers","baseURL","authAPI","authMe","get","login","loginData","post","logout","delete","userAPI","getUsers","page","size","then","response","data","follow","userId","unfollow","profileAPI","getProfile","id","getStatus","updateStatus","status","put","Boolean","window","location","hostname","match","initialState","dialogs","name","messages","message","dialogsReducer","state","action","type","body","text","newMessage","newDialog","friends","photo_url","friendsReducer","users","pageSize","totalUserCount","currentPage","isFetching","followLoad","followOrUnfollow","bool","isFollowed","setUsers","items","totalCount","toggleIsFetching","toggleFollowLoad","usersReducer","map","user","followed","filter","email","isAuth","setMe","setMeThunk","dispatch","a","async","resultCode","authReducer","initialaized","appReducer","reducers","combineReducers","profile","profileReducer","auth","form","formReducer","initialized","store","createStore","applyMiddleware","thunkMiddleware","Header","props","className","s","header","src","loginBlock","onClick","to","HeaderContainer","this","logoutThunk","React","Component","compose","connect","withRouter","Friend","friend_wrap","alt","Navbar","componentsFriends","el","nav","item","activeClassName","activepage","all_friends_wrap","NavbarContainer","DialogItem","path","dialog","customActiveName","Message","dataId","DialogReduxForm","reduxForm","onSubmit","handleSubmit","Field","placeholder","component","Textarea","validate","required","maxLength10","maxLengthCreator","Dialogs","componentsNames","componentsMessage","class","test","dialogsItems","formData","console","log","sendMessage","newMessageText","DialogsContainer","addMessageActionCreator","withAuthRedirect","componentOpenWithSound","Mymap","ymaps","ready","Map","center","zoom","searchControlProvider","events","add","e","coords","User","photos","small","gorinGena","image","disabled","some","unfollowThunk","followThunk","Users","key","getUsersSuperSelector","createSelector","getPageSizeSelector","getTotalUsersCountSelector","getCurrentPage","getUsersIsFetching","getUsersFollowLoad","Paginator","portionSize","pageCount","Math","ceil","pages","allPortions","index","push","useState","portionNum","changePortion","setPortion","currentPort","start","stop","onPageChanged","selectedPage","dick","UsersContainer","setCurrentPage","length","Preloader","Settings","maxLength25","LoginReduxFrom","Input","error","styles","formSummaryError","loginThunk","stopSubmit","_error","withSuspense","fallback","News","lazy","ProfileContainer","App","initializedAppThunk","render","Music","AppContainer","promiseSetMe","Promise","all","SamuraiJsApp","ReactDOM","document","getElementById","navigator","serviceWorker","registration","unregister","value","maxLength","preloader","FormControl","input","meta","child","hasError","touched","formControl","children","restProps","RedirectComponent","audio","Audio","sound","autoplay","startAudio","newPostText","posts","likes","addPostActionCreator","setUserProfile","getProfileThunk","setProfileStatus","getUserStatus","updateProfileStatus","newPost","newText"],"mappings":"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","file":"static/js/main.8813409b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1huYX\",\"item\":\"Navbar_item__31DHl\",\"activepage\":\"Navbar_activepage__3RNcG\",\"all_friends_wrap\":\"Navbar_all_friends_wrap__2CO9n\"};","module.exports = __webpack_public_path__ + \"static/media/69880c1f5e57698.429827e6.mp3\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__2QPjk\"};","module.exports = __webpack_public_path__ + \"static/media/2zH6.b7d803c5.gif\";","import * as axios from 'axios';\r\n\r\nconst samuraiApi = axios.create({\r\n    withCredentials: true,\r\n    headers: {\r\n        'API-KEY': '6fc10eda-6101-457f-9b3f-78fb0d422a3d',\r\n    },\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n});\r\n\r\n\r\nexport const authAPI = {\r\n    authMe() {\r\n        return samuraiApi.get(`auth/me`);\r\n    },\r\n    login(loginData) {\r\n        return samuraiApi.post('/auth/login', loginData);\r\n    },\r\n    logout() {\r\n        return samuraiApi.delete('/auth/login');\r\n    }\r\n}\r\n\r\nexport const userAPI = {\r\n    getUsers (page = 1, size = 20) {\r\n        return samuraiApi.get(`users?page=${page}&count=${size}`).then(response => response.data);\r\n    },\r\n    follow  (userId)  {\r\n        return  samuraiApi.post(`follow/${userId}`);\r\n    },\r\n    unfollow (userId) {\r\n        return samuraiApi.delete(`follow/${userId}`);\r\n    }\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(id) {\r\n        return samuraiApi.get('profile/'+id);\r\n    },\r\n    getStatus(id) {\r\n        return samuraiApi.get('/profile/status/'+id);\r\n    },\r\n    updateStatus(status) {\r\n        return samuraiApi.put('/profile/status', {\r\n            status: status,\r\n        });\r\n    }\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__lEkcV\",\"dialogsItems\":\"Dialogs_dialogsItems__2UBEe\",\"messages\":\"Dialogs_messages__IICDd\",\"dialog\":\"Dialogs_dialog__jFVFO\",\"active\":\"Dialogs_active__3W9eo\",\"customActiveName\":\"Dialogs_customActiveName__ker_Z\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const ADD_NEW_MESSAGE = 'ADD-NEW-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        { id: 1, name: 'Mathew' },\r\n        { id: 2, name: 'Valeriy' },\r\n        { id: 3, name: 'Alexey' },\r\n        { id: 4, name: 'Artem' },\r\n        { id: 5, name: 'Gaylord' },\r\n    ],\r\n    messages: [\r\n        { id: 1, message: 'Hello world' },\r\n        { id: 2, message: 'Valer pidaras' },\r\n        { id: 3, message: 'budesh suck?' },\r\n        { id: 4, message: 'omg' },\r\n        { id: 5, message: 'die' },\r\n    ],\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_NEW_MESSAGE:{\r\n            let body = action.text;\r\n            let newMessage = {\r\n                id : 6,\r\n                message: body,\r\n            };\r\n            let newDialog = {\r\n                id: 6,\r\n                name: 'Me',\r\n            };\r\n            return {\r\n                ...state,\r\n                messages: [...state.messages, newMessage],\r\n                dialogs: [...state.dialogs, newDialog],\r\n            };\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\nexport const addMessageActionCreator = (text) => {\r\n    return {\r\n        type: ADD_NEW_MESSAGE,\r\n        text: text,\r\n      }\r\n}\r\n\r\nexport default dialogsReducer;","let initialState = {\r\n    friends:[\r\n        { id: 1, name: 'Valeriy', photo_url: 'https://yt3.ggpht.com/a/AGF-l78u6JSQLQr-8GxgyzUrpucMlL5q-98zMDUpow=s900-mo-c-c0xffffffff-rj-k-no',},\r\n        { id: 2, name: 'Aleksandr', photo_url: 'https://avatars.mds.yandex.net/get-pdb/214107/29dc6981-6fc4-4933-a3b2-a8e4bcabfee1/s1200',},\r\n        { id: 3, name: 'Genadiy', photo_url: 'https://pbs.twimg.com/media/DR6m8pSW0AAEse1.jpg',},\r\n        { id: 3, name: 'Vladimir', photo_url: 'https://pbs.twimg.com/media/DR6m8pSW0AAEse1.jpg',},\r\n        { id: 3, name: 'Vasiliy', photo_url: 'https://pbs.twimg.com/media/DR6m8pSW0AAEse1.jpg',},\r\n    ],\r\n};\r\n\r\nconst friendsReducer = (state = initialState, action) => {\r\n\r\n    return state;\r\n}\r\n\r\nexport default friendsReducer;","import { userAPI } from '../api/api';\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING = 'TOGGLE_IS_FOLLOWING';\r\nconst FOLLOW_OR_UNFOLLOW = 'users/FOLLOW_OR_UNFOLLOW';\r\n\r\nlet initialState = {\r\n    users: [\r\n\r\n    ],\r\n    pageSize: 5,\r\n    totalUserCount: 0,\r\n    currentPage: 1,\r\n    isFetching: false,\r\n    followLoad: [],\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case FOLLOW_OR_UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: state.users.map(user => {\r\n                    if (user.id === action.userId) {\r\n                        return {\r\n                            ...user, followed: action.isFollowed,\r\n                        }\r\n                    }\r\n                    return user;\r\n                }),\r\n            };\r\n        /*\r\n    case FOLLOW:\r\n        return {\r\n            ...state,\r\n            users: state.users.map(user => {\r\n                if (user.id === action.userId) {\r\n                    return {\r\n                        ...user, followed: true,\r\n                    }\r\n                }\r\n                return user;\r\n            }),\r\n        };\r\n    case UNFOLLOW:\r\n        return {\r\n            ...state,\r\n            users: state.users.map(user => {\r\n                if (user.id === action.userId) {\r\n                    return {\r\n                        ...user, followed: false,\r\n                    }\r\n                }\r\n                return user;\r\n            }),\r\n        };*/\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users,],\r\n                totalUserCount: action.totalUserCount,\r\n            }\r\n        case SET_CURRENT_PAGE:\r\n            return {\r\n                ...state,\r\n                currentPage: action.page,\r\n            }\r\n        case TOGGLE_IS_FETCHING:\r\n            return {\r\n                ...state,\r\n                isFetching: action.isFetching,\r\n            }\r\n        case TOGGLE_IS_FOLLOWING:\r\n            return {\r\n                ...state,\r\n                followLoad: action.followLoad ? [...state.followLoad, action.userId] : state.followLoad.filter(id => id != action.userId),\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n/*\r\nexport const follow = (userId) => {\r\n    return {\r\n        type: FOLLOW,\r\n        userId: userId,\r\n    }\r\n}\r\n\r\nexport const unfollow = (userId) => {\r\n    return {\r\n        type: UNFOLLOW,\r\n        userId: userId,\r\n    }\r\n}\r\n*/\r\nconst followOrUnfollow = (userId, bool) => {\r\n    return {\r\n        type: FOLLOW_OR_UNFOLLOW,\r\n        userId: userId,\r\n        isFollowed: bool,\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users.items,\r\n        totalUserCount: users.totalCount\r\n    }\r\n}\r\n\r\nexport const setCurrentPage = (page) => {\r\n    return {\r\n        type: SET_CURRENT_PAGE,\r\n        page: page,\r\n    }\r\n}\r\n\r\nexport const toggleIsFetching = (isFetching) => {\r\n    return {\r\n        type: TOGGLE_IS_FETCHING,\r\n        isFetching: isFetching,\r\n    }\r\n}\r\n\r\nexport const toggleFollowLoad = (followLoad, userId) => {\r\n    return {\r\n        type: TOGGLE_IS_FOLLOWING,\r\n        followLoad: followLoad,\r\n        userId: userId,\r\n    }\r\n}\r\n\r\n\r\nexport const getUsers = (currentPage, pageSize) => async (dispatch) => {\r\n    dispatch(toggleIsFetching(true));\r\n    let response = await userAPI.getUsers(currentPage, pageSize);\r\n    dispatch(setUsers(response));\r\n    dispatch(toggleIsFetching(false));\r\n}\r\n\r\nexport const followThunk = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowLoad(true, userId));\r\n    let response = await userAPI.follow(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(followOrUnfollow(userId, true));\r\n    }\r\n    dispatch(toggleFollowLoad(false, userId));\r\n}\r\n\r\nexport const unfollowThunk = (userId) => async (dispatch) => {\r\n    dispatch(toggleFollowLoad(true, userId));\r\n    let response = await userAPI.unfollow(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(followOrUnfollow(userId, false));\r\n    }\r\n    dispatch(toggleFollowLoad(false, userId));\r\n}\r\n\r\nexport default usersReducer;","import { authAPI } from '../api/api';\r\nimport { stopSubmit } from 'redux-form';\r\n\r\nconst SET_ME = 'auth/SET_ME';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_ME:\r\n            return {\r\n                ...state,\r\n                ...action.data\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setMe = (userId, email, login, isAuth) => {\r\n    return {\r\n        type: SET_ME,\r\n        data: {\r\n            id: userId,\r\n            email: email,\r\n            login: login,\r\n            isAuth: isAuth,\r\n        },\r\n    }\r\n}\r\n\r\nexport const setMeThunk = () => async (dispatch) => {\r\n        let response = await authAPI.authMe();\r\n\r\n        if (response.data.resultCode === 0) {\r\n            let { id, email, login } = response.data.data;\r\n            //console.log(response.data);\r\n            dispatch(setMe(id, email, login, true));\r\n        }\r\n}\r\n\r\nexport const loginThunk = (formData) => async (dispatch) => {\r\n        let response = await authAPI.login(formData);\r\n            if (response.data.resultCode === 0) {\r\n                //console.log(response.data);\r\n                dispatch(setMeThunk());\r\n            } else {\r\n                let message = response.data.messages.length > 0 ? response.data.messages[0] : 'Some error';\r\n                dispatch(stopSubmit('login', { _error: message, }));\r\n            }\r\n}\r\n\r\nexport const logoutThunk = () => async (dispatch) => {\r\n        let response = await authAPI.logout();\r\n            if (response.data.resultCode === 0) {\r\n                dispatch(setMe(null, null, null, false));\r\n            }\r\n}\r\n\r\n\r\nexport default authReducer;","import { setMe, setMeThunk } from \"./AuthReducer\";\r\n\r\nconst SUCCESS_INITIALIZED = 'SUCCESS_INITIALIZED';\r\n\r\nlet initialState = {\r\n    initialaized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SUCCESS_INITIALIZED:\r\n            return {\r\n                ...state,\r\n                initialaized: true,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const  initialaizedSuccess = () => {\r\n    return {\r\n        type: SUCCESS_INITIALIZED,\r\n    }\r\n}\r\n\r\nexport const initializedAppThunk = () => {\r\n    return (dispatch) => {\r\n        let promiseSetMe = dispatch(setMeThunk());\r\n        Promise.all([promiseSetMe]).then( response => {\r\n            dispatch(initialaizedSuccess());\r\n        });\r\n    }\r\n}\r\n\r\nexport default appReducer;","import {createStore, combineReducers, applyMiddleware} from 'redux';\r\nimport profileReducer from './profileReducer';\r\nimport dialogsReducer from './dialogsReducer';\r\nimport friendsReducer from './friendsReducer';\r\nimport usersReducer from './usersReducer';\r\nimport authReducer from './AuthReducer';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport appReducer from './appReducer';\r\n\r\nlet reducers = combineReducers({\r\n    profile: profileReducer,\r\n    dialogs: dialogsReducer,\r\n    friends: friendsReducer,\r\n    users: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    initialized: appReducer,\r\n});\r\n\r\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\r\n\r\nwindow.store =store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\n\r\nconst Header = (props) => {\r\n    let logout = () => {\r\n        props.logout();\r\n    }\r\n    return <header className={s.header}>\r\n        <img src='https://www.freelogodesign.org/Content/img/logo-ex-7.png' />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth ? <div>{props.login} <div onClick={logout}>logout</div></div> : <NavLink to='/login'>Login</NavLink>}\r\n        </div>\r\n    </header>\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from './Header';\r\nimport { connect } from \"react-redux\";\r\nimport {logoutThunk} from '../../redux/AuthReducer';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { compose } from 'redux';\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header login = {this.props.login} isAuth ={this.props.isAuth} logout = {this.props.logoutThunk} />\r\n    }\r\n}\r\n let mapStateToProps = (state) => {\r\n    return {\r\n        id: state.auth.id,\r\n        email: state.auth.email,\r\n        login: state.auth.login,\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n }\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {logoutThunk}),\r\n    withRouter\r\n)(HeaderContainer);","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Friend.module.css';\r\n\r\nconst Friend = (props) => {\r\n    return (\r\n        <div className={s.friends}>\r\n            <div className={s.friend_wrap}>\r\n                <img src={props.photo_url} alt=\"test\" id={props.id}/>\r\n                <div  className={s.name}>{props.name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Friend;","import React from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport s from './Navbar.module.css';\r\nimport Friend from './Friend/Friend';\r\n\r\nconst Navbar = (props) => {\r\n    let componentsFriends = props.friends.map((el) => {\r\n        return <Friend id={el.id} name={el.name} photo_url={el.photo_url} />;\r\n    });\r\n    //let componentsFriends = 'dick';\r\n    return <nav className={s.nav}>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/profile\" activeClassName={s.activepage} >Profile</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/dialogs\" activeClassName={s.activepage}>Messages</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/News\" activeClassName={s.activepage}>News</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/Music\" activeClassName={s.activepage}>Music</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/Settings\" activeClassName={s.activepage}>Setting</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/map\" activeClassName={s.activepage}>Map</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/users\" activeClassName={s.activepage}>Users</NavLink>\r\n        </div>\r\n        <div className={s.item}>\r\n            <NavLink to=\"/login\" activeClassName={s.activepage}>Login</NavLink>\r\n        </div>\r\n        <h4>Friends</h4>\r\n        <div className={s.all_friends_wrap}>\r\n            {componentsFriends}\r\n        </div>\r\n    </nav>\r\n}\r\n\r\nexport default Navbar;","import Navbar from './Navbar';\r\nimport { addMessageActionCreator, updateMessageBodyCreator } from '../../redux/dialogsReducer';\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        friends: state.friends.friends,\r\n    }\r\n}\r\n\r\nconst NavbarContainer = connect(mapStateToProps)(Navbar);\r\n\r\nexport default NavbarContainer;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return (\r\n        <div className={s.dialog}>\r\n            <NavLink to={path} activeClassName={s.customActiveName} >{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className=\"message\" dataId = {props.id}>{props.message}</div>\r\n}\r\n\r\n\r\n\r\nexport default Message;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Message from './Message/Message';\r\nimport {Textarea} from '../common/FromsControls/FormControls';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport {required, maxLengthCreator, test} from '../../utils/validators/validators';\r\n\r\n\r\nconst DialogsForm = (props) => {\r\n    return (<form onSubmit={props.handleSubmit}>\r\n        <Field type=\"text\" placeholder='text' name='newMessageText' component={Textarea} validate = {[required, maxLength10]}/>\r\n        <button>Send</button>\r\n    </form>);\r\n}\r\n\r\nconst DialogReduxForm = reduxForm({\r\n    form: 'dialogs' // a unique identifier for this form\r\n})(DialogsForm);\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst Dialogs = (props) => {\r\n    let componentsNames = props.state.dialogs.map((el) => {\r\n        return <DialogItem id={el.id} name={el.name} />;\r\n    });\r\n\r\n    let componentsMessage = props.state.messages.map(message => <Message id={message.id} message={message.message} />);\r\n\r\n    const addNewMessage = (formData) => {\r\n        console.log(formData);\r\n        props.sendMessage(formData.newMessageText);\r\n    }\r\n\r\n    return (\r\n        <div class={s.test}>\r\n            <div className={s.dialogs}>\r\n                <div className={s.dialogsItems}>\r\n                    {componentsNames}\r\n                </div>\r\n                <div className={s.messages}>\r\n                    {componentsMessage}\r\n                    <DialogReduxForm onSubmit={addNewMessage} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from './DialogItem/DialogItem';\r\nimport Dialogs from './Dialogs';\r\nimport Message from './Message/Message';\r\nimport { addMessageActionCreator } from '../../redux/dialogsReducer';\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from 'react-router-dom';\r\nimport {withAuthRedirect} from '../../hoc/withAuthRtedirect';\r\nimport {compose} from 'redux';\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.dialogs,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (text) => {\r\n            let action = addMessageActionCreator(text);\r\n            dispatch(action);\r\n        },\r\n    }\r\n}\r\n\r\nlet DialogsContainer = compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    withAuthRedirect\r\n)(Dialogs);\r\n\r\n\r\nexport default DialogsContainer;","import React from 'react';\r\nimport s from './Music.module.css';\r\nimport {componentOpenWithSound} from '../../hoc/withAuthRtedirect';\r\n\r\nconst Music = () => {\r\n    return (\r\n        <h1>Hello world it's music</h1>\r\n    )\r\n}\r\n\r\nexport default componentOpenWithSound(Music);","import React from 'react';\r\nimport s from './Map.module.css';\r\n\r\n\r\n\r\n\r\nclass Mymap extends React.Component {\r\n\r\n  componentDidMount() {\r\n    window.ymaps.ready(() => {\r\n      const localMap = new window.ymaps.Map('map', { center: [51.506863, 45.956584], zoom: 9 }, {\r\n        searchControlProvider: 'yandex#search'\r\n      });\r\n\r\n      localMap.events.add('click', function (e) {\r\n        let coords = e.get('coords');\r\n        console.log(coords);\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (<div id='map' className={s.map}>Tets!</div>)\r\n  }\r\n}\r\n\r\nexport default Mymap;","import React from 'react';\r\nimport gorinGena from '../../assets/img/gorin.jpg';\r\nimport s from './Users.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nlet User = ({user, ...props}) => {\r\n    //let user = props.user;\r\n    return (    <div>\r\n                <span>\r\n                    <NavLink to={'profile/' + user.id}>\r\n                        <img src={user.photos.small ? user.photos.small : gorinGena} className={s.image} alt=\"\" />\r\n                    </NavLink>\r\n                    {user.followed\r\n                        ? <button disabled ={props.followLoad.some(id => id === user.id? true: false)} onClick={() => {\r\n                            props.unfollowThunk(user.id)\r\n                        }}>unfollow</button>\r\n                        : <button disabled ={props.followLoad.some(id => id === user.id? true: false)} onClick={() => {\r\n                            props.followThunk(user.id);\r\n                        }}>follow</button>}\r\n                </span>\r\n                <span>\r\n                    <span>\r\n                        <div>{user.name}</div>\r\n                        <div>{user.status}</div>\r\n                    </span>\r\n                    <span>\r\n                        <div>{}</div>\r\n                        <div>{}</div>\r\n                    </span>\r\n                </span>\r\n                </ div>\r\n    );\r\n}\r\n\r\nexport default User;","import React from 'react';\r\nimport gorinGena from '../../assets/img/gorin.jpg';\r\nimport s from './Users.module.css';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {userAPI} from '../../api/api';\r\nimport User from './User';\r\n\r\nlet Users = (props) => {\r\n    return (\r\n        <div>\r\n            {props.users.map(user => <div key={user.id} >\r\n                <User user = {user} followLoad = {props.followLoad} followThunk = {props.followThunk} unfollowThunk = {props.unfollowThunk}/>\r\n            </div>)}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Users;","import { createSelector } from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.users.users;\r\n}\r\n\r\nexport const getUsersSuperSelector = createSelector(getUsersSelector, (users) => {\r\n    return users;\r\n});\r\n\r\nexport const getPageSizeSelector = (state) => {\r\n    return state.users.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCountSelector = (state) => {\r\n    return state.users.totalUserCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.users.currentPage;\r\n}\r\n\r\nexport const getUsersIsFetching = (state) => {\r\n    return state.users.isFetching;\r\n}\r\n\r\nexport const getUsersFollowLoad = (state) => {\r\n    return state.users.followLoad;\r\n}","import React, { useState } from 'react';\r\nimport s from './Paginator.module.css';\r\n\r\nlet Paginator = (props) => {\r\n    let portionSize = props.portionSize;\r\n    let pageCount = Math.ceil(props.totalUserCount / props.pageSize);\r\n    let pages = [];\r\n    let allPortions = Math.ceil(pageCount / portionSize);\r\n    for (let index = 1; index <= pageCount; index++) {\r\n        pages.push(index);\r\n\r\n    }\r\n\r\n    let [portionNum, changePortion] = useState(1);\r\n\r\n    let setPortion = (currentPort) => {\r\n        changePortion(currentPort);\r\n    }\r\n\r\n    let start = (portionNum - 1) * portionSize + 1;\r\n    let stop = portionNum * portionSize;\r\n\r\n    return (\r\n        <div>\r\n            {portionNum > 1 ? <button onClick={() => { setPortion(portionNum - 1) }}>Prev</button> : ''}\r\n            {pages.map(page => {\r\n                if (page >= start && page <=stop) {\r\n                    return <span key={page} onClick={(e) => { props.onPageChanged(page) }} className={props.currentPage === page ? s.selectedPage : s.dick}>{page}</span>   \r\n                }\r\n            })}\r\n            {portionNum < allPortions ? <button onClick={() => { setPortion(portionNum + 1) }}>Next</button> : ''}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Paginator;","import React from 'react';\r\nimport { setUsers, setCurrentPage, toggleIsFetching, toggleFollowLoad, getUsers, followThunk, unfollowThunk } from '../../redux/usersReducer';\r\nimport { connect } from \"react-redux\";\r\nimport Users from './Users';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport {getUsersSuperSelector, getUsersSelector, getPageSizeSelector, getTotalUsersCountSelector, getCurrentPage, getUsersIsFetching, getUsersFollowLoad} from '../../redux/usersSelector';\r\nimport Paginator from '../common/Paginator/Paginator';\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n\r\n    componentDidMount() {\r\n        if (this.props.users.length === 0) {\r\n            this.props.getUsers(this.props.currentPage, this.props.pageSize);   \r\n        }\r\n    }\r\n\r\n    onPageChanged = (page) => {\r\n        this.props.setCurrentPage(page);\r\n        this.props.getUsers(page, this.props.pageSize);\r\n        //let pageNum = Number(page.target.innerHTML);\r\n        /*\r\n        this.props.toggleIsFetching(true);\r\n        getUsers(page,this.props.pageSize).then(response => {\r\n            this.props.setUsers(response);\r\n            this.props.toggleIsFetching(false);\r\n        });\r\n        */\r\n    }\r\n\r\n    render() {\r\n        return (<>\r\n            {this.props.isFetching ? <Preloader /> : null}\r\n            <Paginator portionSize = {25} totalUserCount = {this.props.totalUserCount} pageSize = {this.props.pageSize} currentPage = {this.props.currentPage} onPageChanged = {this.onPageChanged}/>\r\n            <Users\r\n                //follow={this.props.follow}\r\n                followThunk = {this.props.followThunk}\r\n                //unfollow={this.props.unfollow}\r\n                unfollowThunk = {this.props.unfollowThunk}\r\n                users={this.props.users}\r\n                totalUserCount={this.props.totalUserCount}\r\n                pageSize={this.props.pageSize}\r\n                onPageChanged={this.onPageChanged}\r\n                currentPage={this.props.currentPage} \r\n                toggleFollowLoad = {this.props.toggleFollowLoad}\r\n                followLoad = {this.props.followLoad}\r\n                />\r\n                \r\n        </>\r\n        )\r\n    }\r\n}\r\n/*\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: state.users.users,\r\n        pageSize: state.users.pageSize,\r\n        totalUserCount: state.users.totalUserCount,\r\n        currentPage: state.users.currentPage,\r\n        isFetching: state.users.isFetching,\r\n        followLoad: state.users.followLoad,\r\n    }\r\n}\r\n*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsersSuperSelector(state),\r\n        pageSize: getPageSizeSelector(state),\r\n        totalUserCount: getTotalUsersCountSelector(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getUsersIsFetching(state),\r\n        followLoad: getUsersFollowLoad(state),\r\n    }\r\n}\r\n/*\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        follow: (userId) => {\r\n            let action = follow(userId);\r\n            dispatch(action);\r\n        },\r\n        unfollow: (userId) => {\r\n            let action = unfollow(userId);\r\n            dispatch(action);\r\n        },\r\n        setUsers: (users) => {\r\n            let action = setUsers(users);\r\n            dispatch(action);\r\n        },\r\n        setCurrentPage: (page) => {\r\n            let action = setCurrentPage(page);\r\n            dispatch(action);\r\n        },\r\n        toggleIsFetching: (isFetching) => {\r\n            let action = toggleIsFetching(isFetching);\r\n            dispatch(action);\r\n        }\r\n    }\r\n}\r\n*/\r\n\r\nexport default connect(mapStateToProps, {\r\n    setUsers,\r\n    setCurrentPage,\r\n    toggleIsFetching,\r\n    toggleFollowLoad,\r\n    getUsers,\r\n    followThunk,\r\n    unfollowThunk,\r\n})(UsersContainer);","import React from 'react';\r\nimport s from './Settings.module.css';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <h1>Hello world it's Settings</h1>\r\n    )\r\n}\r\n\r\nexport default Settings;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { connect } from \"react-redux\";\r\nimport {loginThunk} from '../../redux/AuthReducer';\r\nimport {Input} from '../common/FromsControls/FormControls';\r\nimport {required, maxLengthCreator, test} from '../../utils/validators/validators';\r\nimport { Redirect } from 'react-router-dom';\r\nimport styles from '../common/FromsControls/FormControls.module.css';\r\n\r\n\r\nconst maxLength25 = maxLengthCreator(25);\r\n\r\nconst LoginForm = (props) => {\r\n    return (\r\n        <form onSubmit = {props.handleSubmit}>\r\n            <div>\r\n                <Field type=\"text\" placeholder='email' name='email' component={Input} validate = {[required, maxLength25]}/>\r\n            </div>\r\n            <div>\r\n                <Field type=\"password\" placeholder='password' name='password' component={Input} validate = {[required, maxLength25]} />\r\n            </div>\r\n            <div>\r\n                <Field type=\"checkbox\" name='rememberMe' component=\"input\" />rememberMe\r\n            </div>\r\n            {props.error ?\r\n            <div className={styles.formSummaryError} >\r\n                {props.error}\r\n            </div> :\r\n            <div></div>\r\n            }\r\n            <div>\r\n                <button>Login</button>\r\n            </div>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        console.log(formData);\r\n        props.loginThunk(formData);\r\n    }\r\n\r\n    if (props.isAuth) {\r\n      return <Redirect to = '/profile'/>;  \r\n    }\r\n\r\n    return <div>\r\n        <h1>Login</h1>\r\n        <LoginReduxFrom onSubmit = {onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst LoginReduxFrom = reduxForm({\r\n    form: 'login' // a unique identifier for this form\r\n})(LoginForm)\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        isAuth: state.auth.isAuth,\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{loginThunk})(Login);","import React, { Suspense } from 'react';\r\nimport Preloader from '../components/common/Preloader/Preloader';\r\n\r\nexport const withSuspense = (Component) => {\r\n    //debugger;\r\n    let withSuspenseComponent = (props) => {\r\n        return <Suspense fallback={<Preloader />}>< Component {...props} /></Suspense>\r\n    }\r\n    return withSuspenseComponent;\r\n}","import React, {Suspense} from 'react';\r\nimport './App.css';\r\nimport HeaderContainer from './components/Header/HeaderContainer';\r\nimport NavbarContainer from './components/Navbar/NavbarContainer';\r\nimport DialogsContainer from './components/Dialogs/DialogsContainer';\r\nimport Music from './components/Music/Music';\r\nimport Map from './components/Map/Map';\r\nimport UsersContainer from './components/Users/UsersContainer';\r\nimport Settings from './components/Settings/Settings';\r\nimport { Route } from \"react-router-dom\";\r\nimport Login from './components/Login/Login';\r\nimport { initializedAppThunk } from './redux/appReducer';\r\nimport { connect } from \"react-redux\";\r\n//import App from './App';\r\nimport Preloader from './components/common/Preloader/Preloader';\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport store from './redux/redux-store';\r\nimport {withSuspense} from './hoc/withSuspense';\r\n\r\n//import News from './components/News/News';\r\nconst News = React.lazy(() => import('./components/News/News'));\r\nconst ProfileContainer = React.lazy(() => import('./components/Profile/ProfileContainer'));\r\n\r\n\r\nclass App extends React.Component {\r\n\r\n  componentDidMount() {\r\n    this.props.initializedAppThunk();\r\n  }\r\n\r\n  render() {\r\n    if (!this.props.isAuth) {\r\n      return <Preloader />\r\n    }\r\n    return (\r\n      <div className='app-wrapper'>\r\n        <HeaderContainer />\r\n        <NavbarContainer />\r\n        <div className='app-wrapper-content'>\r\n          <Route path='/dialogs' render={() => <DialogsContainer />} />\r\n          <Route path='/profile/:userId?' render={withSuspense(ProfileContainer)} />\r\n          <Route path='/users' component={UsersContainer} />\r\n          <Route path='/news' render={withSuspense(News)} />\r\n          <Route path='/music' component={Music} />\r\n          <Route path='/settings' component={Settings} />\r\n          <Route path='/map' render={() => <Map />} />\r\n          <Route path='/Login' render={() => <Login />} />\r\n        </div>\r\n      </div>);\r\n  }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n  return {\r\n    isAuth: state.initialized.initialaized,\r\n  }\r\n}\r\n\r\nlet AppContainer = connect(mapStateToProps, { initializedAppThunk })(App);\r\n\r\nlet SamuraiJsApp = (props) => {\r\n  return (\r\n    <BrowserRouter>\r\n      <Provider store={store}>\r\n        <AppContainer />\r\n      </ Provider>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default SamuraiJsApp;","import * as serviceWorker from './serviceWorker';\r\nimport store from './redux/redux-store';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport SamuraiJsApp from './App';\r\n\r\n\r\nlet rerenderEntireTree = (state) => {\r\n    ReactDOM.render(\r\n        <SamuraiJsApp />, document.getElementById('root')\r\n        );\r\n}\r\nrerenderEntireTree();\r\n\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();","export const required = (value) => {\r\n    if (value) return undefined;\r\n    return 'Field is required';\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value && value.length > maxLength) return \"Max length \"+maxLength+\" symbols\";\r\n    return undefined;\r\n}","import React from 'react';\r\nimport preloader from '../../../assets/img/2zH6.gif';\r\n\r\nconst Preloader = () => {\r\n    return <img src={preloader} alt=\"preloader\"/>\r\n}\r\n\r\nexport default Preloader;","import React from \"react\";\r\nimport styles from \"./FormControls.module.css\";\r\n\r\n\r\nconst FormControl = ({ input, meta, child, ...props }) => {\r\n    const hasError = meta.touched && meta.error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')} >\r\n            <div>\r\n                {props.children}\r\n                {hasError ? <span>{meta.error}</span>:''}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <textarea {...input} {...restProps}></textarea> </FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const { input, meta, child, ...restProps } = props;\r\n    return <FormControl {...props}> <input {...input} {...restProps} /> </FormControl>\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormControls_formControl__OGR6d\",\"error\":\"FormControls_error__YETRZ\",\"formSummaryError\":\"FormControls_formSummaryError__1faC2\"};","import React from 'react';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {connect} from \"react-redux\";\r\nimport sound from '../assets/sounds/69880c1f5e57698.mp3';\r\n\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) {\r\n                return < Redirect to='/login' />\r\n            }\r\n            return < Component {...this.props} />\r\n                };\r\n        }\r\n\r\n        let mapStateToProps = (state) => {\r\n            return {\r\n                isAuth: state.auth.isAuth,\r\n            }\r\n        }\r\n        return connect(mapStateToProps)(RedirectComponent);\r\n}\r\n\r\nexport const componentOpenWithSound = (Component) => {\r\n    let withSoundComponent = (props) => {\r\n        let startAudio = () => {\r\n            //console.log(sound);\r\n            var audio = new Audio(); // Создаём новый элемент Audio\r\n            audio.src = sound; // Указываем путь к звуку \"клика\"\r\n            audio.autoplay = true;\r\n          }\r\n        \r\n        startAudio();\r\n        return < Component {...props} />\r\n    }\r\n    return withSoundComponent;\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend_wrap\":\"Friend_friend_wrap__2VuWG\",\"name\":\"Friend_name__2PA9F\",\"friends\":\"Friend_friends__1uUs9\"};","module.exports = __webpack_public_path__ + \"static/media/gorin.e9e94232.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Users_map__2vGrF\",\"image\":\"Users_image__3KFVb\",\"selectedPage\":\"Users_selectedPage__3ALyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3wW75\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"selectedPage\":\"Paginator_selectedPage__1Pb-r\",\"dick\":\"Paginator_dick__2aj7B\"};","import { profileAPI } from '../api/api';\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-text';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\r\nconst UPDATE_PROFILE_STATUS = 'UPDATE_PROFILE_STATUS';\r\nconst DELETE_POST = 'DELETE_POST';\r\n\r\nlet initialState = {\r\n    newPostText: 'Post text',\r\n    status: '',\r\n    posts: [\r\n        { id: 1, post: 'Hello i\\'m Gena Gorin!', photo_url: 'https://yt3.ggpht.com/a/AGF-l78u6JSQLQr-8GxgyzUrpucMlL5q-98zMDUpow=s900-mo-c-c0xffffffff-rj-k-no', likes: 228, },\r\n        { id: 2, post: 'OMG i\\'m too', photo_url: 'https://avatars.mds.yandex.net/get-pdb/214107/29dc6981-6fc4-4933-a3b2-a8e4bcabfee1/s1200', likes: 1488 },\r\n        { id: 3, post: 'And me', photo_url: 'https://pbs.twimg.com/media/DR6m8pSW0AAEse1.jpg', likes: 190 },\r\n    ],\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 4,\r\n                post: action.text,\r\n                photo_url: 'https://pbs.twimg.com/media/C8ts2VHXkAATPOw.jpg',\r\n                likes: 0,\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n                newPostText: '',\r\n            };\r\n        }\r\n        case UPDATE_NEW_POST_TEXT: {\r\n            return {\r\n                ...state,\r\n                newPostText: action.newText\r\n            };\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {\r\n                ...state,\r\n                profile: action.profile\r\n            };\r\n        }\r\n        case UPDATE_PROFILE_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            };\r\n        }\r\n        case DELETE_POST: {\r\n            return {\r\n                ...state,\r\n                posts: state.posts.filter(function (post) {\r\n                    return post.id != action.id;\r\n                })\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (text) => {\r\n    return {\r\n        type: ADD_POST,\r\n        text: text,\r\n    }\r\n}\r\n\r\nexport const deletePostActionCreator = (id) => {\r\n    return {\r\n        type: DELETE_POST,\r\n        id: id,\r\n    }\r\n}\r\n\r\nexport const setUserProfile = (profile) => {\r\n    return {\r\n        type: SET_USER_PROFILE,\r\n        profile: profile,\r\n    }\r\n}\r\n\r\nexport const getProfileThunk = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getProfile(userId);\r\n    dispatch(setUserProfile(response.data));\r\n}\r\n\r\nconst setProfileStatus = (status) => {\r\n    return {\r\n        type: UPDATE_PROFILE_STATUS,\r\n        status: status,\r\n    }\r\n}\r\n\r\nexport const getUserStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId);\r\n    dispatch(setProfileStatus(response.data));\r\n}\r\n\r\nexport const updateProfileStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setProfileStatus(status));\r\n    }\r\n}\r\n\r\nexport default profileReducer;"],"sourceRoot":""}